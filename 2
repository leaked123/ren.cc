getgenv().predictionenabled = true
getgenv().prediction = 0.05137485673041576347851407 -- Adjust this based on your needs
getgenv().offset = 0.06
getgenv().resolver = false
getgenv().smoothness = 1
getgenv().keybind = Enum.KeyCode.C

local players = game:GetService("Players")
local localplayer = players.LocalPlayer
local mouse = localplayer:GetMouse()
local userinputservice = game:GetService("UserInputService")
local runservice = game:GetService("RunService")
local currentCamera = workspace.CurrentCamera

local victim = nil
local targeting = false

local function target()
    local target = nil
    local shortdistance = math.huge

    for _, v in next, workspace:GetDescendants() do
        if v:IsA("Model") and v ~= localplayer.Character and v:FindFirstChildOfClass("Humanoid") then
            local humanoid = v:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.Health > 0 then
                local rootPart = v:FindFirstChild("HumanoidRootPart") or v.PrimaryPart
                if rootPart then
                    local worldtoviewportpoint, onscreen = currentCamera:WorldToViewportPoint(rootPart.Position)
                    local distance = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(worldtoviewportpoint.X, worldtoviewportpoint.Y)).Magnitude

                    if distance < shortdistance and onscreen then
                        target = v
                        shortdistance = distance
                    end
                end
            end
        end
    end
    return target and (target.PrimaryPart or target:FindFirstChildOfClass("HumanoidRootPart"))
end

userinputservice.InputBegan:Connect(function(input, processed)
    if processed then
        return
    end

    if input.KeyCode == getgenv().keybind then
        targeting = not targeting

        if targeting then
            victim = target()
        else
            victim = nil
        end
    end
end)

local velocity = Vector3.new(0,0,0)
local oldpos = Vector3.new(0,0,0)

runservice.Heartbeat:Connect(function(deltaTime)
    if victim and victim.Parent then
        local rootPart = victim.PrimaryPart or victim:FindFirstChildOfClass("HumanoidRootPart")
        if rootPart then
            local currentpos = rootPart.Position
            local displacement = currentpos - oldpos
            local vector = displacement / deltaTime

            velocity = velocity:Lerp(Vector3.new(
                vector.X,
                vector.Y * 0.94 * getgenv().offset,
                vector.Z
            ), 0.4)

            oldpos = currentpos
        end
    end
end)

runservice.RenderStepped:Connect(function()
    if targeting and victim and victim.Parent then
        local humanoid = victim:FindFirstChildOfClass("Humanoid")
        if humanoid and humanoid.Health > 0 then
            local rootPart = victim.PrimaryPart or victim:FindFirstChildOfClass("HumanoidRootPart")
            if rootPart then
                local pos

                if getgenv().predictionenabled then
                    if getgenv().resolver then
                        pos = rootPart.Position + (velocity * getgenv().prediction)
                    else
                        pos = rootPart.Position + (velocity * getgenv().prediction)
                    end
                else
                    pos = rootPart.Position
                end

                currentCamera.CFrame = currentCamera.CFrame:Lerp(CFrame.new(currentCamera.CFrame.Position, pos), getgenv().smoothness)
            end
        end
    end
end)
